""""""""""""""""""""""""""""""
" vimrc
""""""""""""""""""""""""""""""
call plug#begin('~/.vim/plugged')

" Japanese Help
Plug 'vim-jp/vimdoc-ja'

" fzf
Plug 'junegunn/fzf', { 'dir': '~/fzf', 'do': '~/fzf/install --all' }
Plug 'junegunn/fzf.vim'

" vim lsp setting
"Plug 'prabirshrestha/vim-lsp'
"Plug 'mattn/vim-lsp-settings'

" filer
Plug 'lambdalisue/fern.vim'

" Customize status bar
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" color scheme
Plug 'chriskempson/base16-vim'

" vim-im-select
Plug 'brglng/vim-im-select'

Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/async.vim'
Plug 'prabirshrestha/vim-lsp'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
let g:asyncomplete_remove_duplicates = 1
let g:asyncomplete_smart_completion = 1
let g:asyncomplete_auto_popup = 1
Plug 'w0rp/ale'

"rust lang
Plug 'rust-lang/rust.vim'
let g:rustfmt_autosave = 1

" markdown
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'
Plug 'previm/previm'
let g:vim_markdown_folding_disabled = 1
let g:previm_enable_realtime = 1
let g:previm_open_cmd = 'open -a Google\ Chrome'
" let g:previm_open_cmd = 'open -a Microsoft\ Edge'

Plug 'skanehira/translate.vim'

call plug#end()

""""""""""""""""""""""""""""""
set nocompatible
set backspace=indent,eol,start
set encoding=utf-8
set helplang=ja,en
set number
"set expandtab
set hlsearch
set ignorecase
set incsearch
set smartcase
set laststatus=2
syntax on
set autoindent
filetype plugin indent on
set showcmd
set background=dark
set wildmenu
set ruler
set showmatch
set clipboard+=unnamed
set autochdir

" line number color
highlight lineNr term=underline ctermfg=11 guifg=Grey

" setting color scheme
let base16colorspace=256  " Access colors present in 256 colorspace
set termguicolors
" colorscheme base16-default-dark
" colorscheme base16-ashes
colorscheme darkblue

" setting status bar
let g:airline_theme='luna'

" no backupu file creation
set nowritebackup

"no backup file
set nobackup

" rectangle
set virtualedit=block

" 
set backspace=indent,eol,start

" 
set ambiwidth=double

" 
set wildmenu

set clipboard+=unnamed

" skanehira/preview-markdown.vim
let g:preview_markdown_vertical = 1
let g:preview_markdown_auto_update = 1

" airline tabdisplay
let g:airline#extensions#tabline#enabled = 1

"open new window on the right side
set splitright

let mapleader="¥"

let s:lombok_path = $HOME . '/lsp/lombok.jar'
if executable('java') && filereadable(expand('~/lsp/eclipse.jdt.ls/plugins/org.eclipse.equinox.launcher_1.5.300.v20190213-1655.jar')) && filereadable(expand(s:lombok_path))

    " ale の設定
    let g:ale_java_javac_options = "-cp " . s:lombok_path

    " vim-lsp の設定
    au User lsp_setup call lsp#register_server({
        \ 'name': 'eclipse.jdt.ls',
        \ 'cmd': {server_info->[
        \     'java',
        \     '-javaagent:' . s:lombok_path,
        \     '-Xbootclasspath/a:' . s:lombok_path,
        \     '-Declipse.application=org.eclipse.jdt.ls.core.id1',
        \     '-Dosgi.bundles.defaultStartLevel=4',
        \     '-Declipse.product=org.eclipse.jdt.ls.core.product',
        \     '-Dlog.level=ALL',
        \     '-noverify',
        \     '-Dfile.encoding=UTF-8',
        \     '-Xmx1G',
        \     '-jar',
        \     expand('~/lsp/eclipse.jdt.ls/plugins/org.eclipse.equinox.launcher_1.5.300.v20190213-1655.jar'),
        \     '-configuration',
        \     expand('~/lsp/eclipse.jdt.ls/config_mac'),
        \     '-data',
        \     getcwd()
        \ ]},
        \ 'whitelist': ['java'],
        \ })
endif

""" 以下のキーマッピングは任意
" 定義へ飛ぶ
nmap <silent> <C-]> :LspDefinition<CR>
" 定義へ飛ぶ
nmap <silent> gd :LspDefinition<CR>
" 呼び出し箇所を見る
nmap <silent> gD :LspReferences<CR>

" im control
let g:im_select_default = 'com.google.inputmethod.Japanese.Roman'

" for Java
"NeoBundleLazy 'ervandew/eclim', {'build': 
"    {'mac': 'ant-Declipse.home=/opt/homebrew-cask/Caskroom/eclipse-java/4.4.0/eclipse -Dvim.files='.escape(expand('~/.bundle/eclim'), ''    )}
"    }
" autocmd FileType java NeoBundleSource eclim

"set noimd

" Note: Skip initialization for vim-tiny or vim-small.
if 0 | endif

if &compatible
  set nocompatible               " Be iMproved
endif

" Required:
set runtimepath+=~/.vim/bundle/neobundle.vim/

" Required:
call neobundle#begin(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

" My Bundles here:
" Refer to |:NeoBundle-examples|.
" Note: You don't set neobundle setting in .gvimrc!

call neobundle#end()

" Required:
filetype plugin indent on

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck

"NeoBundle 'mattn/emmet-vim'

set tabstop=2 
set shiftwidth=2
set expandtab
set fenc=utf-8
set cursorline
" e ++enc=utf-8

tab ba

if has("autocmd")
  "
  filetype plugin on
  "
  filetype indent on
  "sw=shiftwidth, sts=softtabstop, ts=tabstop, et=expandtab
  autocmd FileType c           setlocal sw=2 sts=2 ts=2 et
  autocmd FileType html        setlocal sw=2 sts=2 ts=2 et
  autocmd FileType ejs         setlocal sw=2 sts=2 ts=2 et
  autocmd FileType ruby        setlocal sw=2 sts=2 ts=2 et
  autocmd FileType js          setlocal sw=2 sts=2 ts=2 et
  autocmd FileType zsh         setlocal sw=2 sts=2 ts=2 et
  autocmd FileType python      setlocal sw=2 sts=2 ts=2 et
  autocmd FileType scala       setlocal sw=2 sts=2 ts=2 et
  autocmd FileType json        setlocal sw=2 sts=2 ts=2 et
  autocmd FileType html        setlocal sw=2 sts=2 ts=2 et
  autocmd FileType css         setlocal sw=2 sts=2 ts=2 et
  autocmd FileType scss        setlocal sw=2 sts=2 ts=2 et
  autocmd FileType sass        setlocal sw=2 sts=2 ts=2 et
  autocmd FileType javascript  setlocal sw=2 sts=2 ts=2 et
  autocmd BufRead,BufNewFile *.txt set syntax=config
endif

" insert mode map
" Emacs Move
inoremap <C-a> <Home>
inoremap <C-e> <End>
inoremap <C-b> <Left>
inoremap <C-f> <Right>
inoremap <C-s> <ESC>:w<CR>a
inoremap <C-c> <ESC>yiwa
inoremap <Leader>v <C-r>0
"inoremap <C-n>  <Down>
"inoremap <C-p>  <UP>

" normal mode map
nnoremap <C-s> :w<CR>
nnoremap <C-p> <Plug>AirlineSelectPrevTab
nnoremap <C-n> <Plug>AirlineSelectNextTab
nnoremap <Leader>f :FZF<CR>
nnoremap <Leader>c :bd<CR>
nnoremap <Leader>md :PrevimOpen<CR>

" visual mode key map
vnoremap <C-c> y

